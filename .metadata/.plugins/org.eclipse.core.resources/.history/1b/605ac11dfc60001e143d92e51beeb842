package com.movie;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class MainMenu extends AbstractMenu {

	private static final MainMenu instance = new MainMenu(null);

	private static final String MAIN_MENU_TEXT = 
			"1.영화 예매하기\n"
			+ "2.예매 확인하기\n"
			+ "3.예매 취소하기\n"
			+ "4.관리자 메뉴로 이동\n"
			+ "q.종료\n\n"
			+ "메뉴를 선택하세요 : ";
	
	private MainMenu(Menu prevMenu) {		
		super(MAIN_MENU_TEXT, prevMenu);	//AbstractMenu의 생성자에 반환.	MainApp에서 while문 - print()가 시작.
	}

	public static MainMenu getInstance() {
		return instance ;
	}

	@Override
	public Menu next() {
		
		switch(sc.nextLine()) {
		case "1" :
			reserve();
			return this;
		case "2" :
			checkReservation();
			return this;
		case "3" :
			cancelReservation();
			return this;
		case "4" : 
			if(!checkAdminPassword()) {
				System.out.println(">>비밀번호가 틀렸습니다.");
				return this;
			}
			AdminMenu adminMenu = AdminMenu.getInstance();
			adminMenu.SetPrevMenu(this);	//MainMenu	-> AdminMenu.java 참고
			return adminMenu;
		case "q" : return prevMenu;	//prevMenu에는 null값이 들어있음. 
							//null 반환하며 프로그램 종료(MainApp - while문 참고)
		
		default : return this;		//입력상태를 유지(객체 자신을 반환)
		}
		
	}

	private boolean checkAdminPassword() {
		System.out.print("관리자 비밀번호를 입력하세요 : ");
		return "aa".equals(sc.nextLine());
	};

	private void checkReservation() {
		System.out.print("예매번호를 입력하세요 : ");	//id값
		try {
			Reservation r = Reservation.findById(sc.nextLine());
			
			if(r != null) {
				System.out.printf(">> [확인 완료] %s\n", r.toString());
			} else {
				System.out.println(">> 예매 내역이 없습니다.");
			}
			
		} catch (Exception e) {
			System.out.println(">> 파일 입출력에 문제가 생겼습니다.");
		}
	}
	
	private void cancelReservation() {
		System.out.print("예매 번호를 입력하세요 : ");
		try {
			Reservation r = Reservation.cancel(sc.nextLine());
			if(r != null) {
				System.out.printf(">> [취소 완료] %s의 예매가 취소되었습니다.\n", r);
			} else {
				System.out.println("예매 내역이 존재하지 않습니다.");
			}
		} catch (Exception e) {
			System.out.println(">> 파일 입출력에 문제가 생겼습니다.");
		}
	}
	
	private void reserve() {
		try {
			List<Movie> movies = Movie.findAll();
			
			for(Movie movie : movies) {
				System.out.printf("%s\n", movie);
			}
			
			System.out.print("예매할 영화를 선택하세요 : ");
			String movieIdStr = sc.nextLine();
			Movie m = Movie.findById(movieIdStr);	//올바르게 id를 입력하였는지 확인하기 위해
			
			List<Reservation> reservations = Reservation.findByMovieId(movieIdStr);	//좌석현황, 예매현황 알아보기
			
			Seats seats = new Seats(reservations);
			seats.show();
			
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}
