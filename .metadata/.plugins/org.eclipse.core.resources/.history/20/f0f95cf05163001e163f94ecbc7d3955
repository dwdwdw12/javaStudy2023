package ex03;

public class CurrentThreadName3 {
	public static void main(String[] args) throws InterruptedException {
		
		Runnable task1 = () -> {
			for (int i = 0; i < 20; i++) {
				if (i % 2 == 0)
					System.out.print(i + " "); // 짝수 출력
				try {
					Thread.sleep(1000);			//대기 시간 부여. 없으면 순서가 뒤죽박죽.
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		};

		Runnable task2 = () -> {
			for (int i = 0; i < 20; i++) {
				if (i % 2 == 1)
					System.out.print(i + " "); // 홀수 출력
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		};
		
		Thread t1 = new Thread(task1, "MyThread");			
		Thread t2 = new Thread(task2, "MyThread");			
		t1.start();											
		t2.start();		
		
		t1.join();
		
		
		System.out.println("end : " + Thread.currentThread().getName());	//위의 스레드가 동작하는 동안, 먼저 작업이 끝남. 먼저 출력
		
	}
}
