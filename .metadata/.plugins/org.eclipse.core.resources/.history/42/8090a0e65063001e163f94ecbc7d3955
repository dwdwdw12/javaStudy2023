package ex03;

class Counter{
	int count = 0;
	
	public void increment() {count++;}
	public void decrement() {count--;}
	
	public int getCount() {return count;}
}

public class CurrentThreadName4 {
	
	public static Counter cnt = new Counter();		//static은 밖으로

	public static void main(String[] args) throws InterruptedException {
		
		
		Runnable task1 = () -> {
			for (int i = 0; i < 1000; i++) {
				cnt.increment();
			}
		};

		Runnable task2 = () -> {
			for (int i = 0; i < 1000; i++) {
				cnt.decrement();
			}
		};
		
		Thread t1 = new Thread(task1, "MyThread");			
		Thread t2 = new Thread(task2, "MyThread");			
		t1.start();											
		t2.start();			
		
		t1.join();		//작업이 끝날때까지 대기.
		t2.join();
		
		System.out.println("count : " + cnt.getCount());
//		System.out.println("end : " + Thread.currentThread().getName());	//위의 스레드가 동작하는 동안, 먼저 작업이 끝남. 먼저 출력
		
	}
}
