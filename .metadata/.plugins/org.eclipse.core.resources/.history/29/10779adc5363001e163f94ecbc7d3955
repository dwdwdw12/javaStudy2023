package ex03;

class Printer{
	private boolean isHelloTurn = true;
	
	synchronized public void printHello() {
		while(!isHelloTurn) {
			try {
				wait();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		System.out.println("Hello");
		isHelloTurn = false;
		notify(); 					//false로 바꾼걸 알려줌
	}

	synchronized public void printWorld() {
		while(isHelloTurn) {		//부호를 반대로
			try {
				wait();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		System.out.println("World");
		isHelloTurn = true;
		notify(); 					
	}
}

public class CurrentThreadName7 {
	public static void main(String[] args) throws InterruptedException {

		
		
		Thread t1 = new Thread(()->{
				for (int i = 0; i < 5; i++) {
					System.out.println("Hello");
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
		});			
		
		Thread t2 = new Thread(()->{	 				//번갈아가며 출력되지 않음. 순서가 뒤죽박죽.
				for (int i = 0; i < 5; i++) {
					System.out.println("World");
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
		});			
		
		t1.start();		
		t2.start();			
		
		//t1.join();		
		//t2.join();		
		
		System.out.println("end : " + Thread.currentThread().getName());	
		
	}
}
